services:
  nginx:
    build: 
      context: ./nginx_service
    image: nginx_service:v1.6
    container_name: nginx_service
    # ports:
    #   - "80:80"
    #   - "443:443"
    #   - "8080:8080"
    networks:
      - app-network
    depends_on:
      - django
    volumes:
      - ./django_backend/staticfiles:/staticfiles
      - ./django_backend/media:/media


  django:
    build: 
      context: ./django_backend 
    container_name: django_backend
    image: django_backend:v1.2
    # ports:
    #   - "8001:8001"
    volumes:
      - ./django_backend:/app
    environment:
      AI_API_SERVER_HOST: 'model_api' # 'truong51972.ddns.net' if wanna deploy api server outside
      AI_API_SERVER_PORT: '8000'
      DATABASE_HOST_NAME: 'database'
      DATABASE_NAME: 'LMS_database'
      DATABASE_USER: 'root'
      DATABASE_PASSWORD: '123'
    networks:
      - app-network

  model_api:
    build: 
      context: ./model_api 
    container_name: model_api
    image: model_api:v1.1
    # ports:
    #   - "8000:8000"
    volumes:
      - ./model_api:/app
    networks:
      - app-network
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      # - NVIDIA_DRIVER_CAPABILITIES=all # compute,utility using for Pytorch replace all if needed

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared_tunnel
    command: tunnel run
    restart: always
    environment:
      # - TUNNEL_TRANSPORT_PROTOCOL=quic
      - TUNNEL_ORIGIN_KEEPALIVE_TIMEOUT=30s
      - "TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}"
      - NO_AUTOUPDATE
    healthcheck:
      test: ["CMD", "cloudflared", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - app-network
      
  database:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: LMS_database
    # ports:
    #   - "5433:5432"
    volumes:
      - ./.database:/var/lib/postgresql/data # comment this line if you wanna switch back to old database 
      # - postgres_data:/var/lib/postgresql/data # uncomment this line if you wanna switch back to old database 
    networks:
      - app-network

# volumes:
#   postgres_data

networks:
  app-network:
    driver: bridge


#################
# script inscrease buffer size
# create in <username>/.wslconfig
# coppy below
# ######COPY######
# [wsl2]
# kernelCommandLine = "sysctl.net.core.rmem_max=8388608 sysctl.net.core.wmem_max=8388608"